name: pre-commit

on:
  push:

    branches:
      - 'fix/*'
      - 'fixes/*'
      - 'feature/*'
      - 'features/*'
      - 'hotfix/*'
      - 'hotfixes/*'
      - 'release/*'
      - 'releases/*'
      - 'chore/*'
      - 'chores/*'

env:
  TF_VER: "0.14.11"
  TF_DOCS_VER: "v0.16.0"
  TFLINT_VER: "v0.35.0"
  BIN_PATH: "/home/runner/.local/bin"
  REPO_NAME: ${{ github.event.repository.name }}
  REPO_OWNER: ${{ github.repository_owner }}

jobs:
  pre-commit:
    runs-on: ubuntu-latest
    steps:
    - name: Git checkout
      uses: actions/checkout@v3
      with:
        token: ${{ secrets.GITHUB_TOKEN }}

    - name: Install terraform binary #and extract only terraform-docs binary as extracting other files will override some module files
      run: |
        mkdir -p /home/runner/.local/bin
        curl -sSLo ./terraform-docs.tar.gz https://terraform-docs.io/dl/${TF_DOCS_VER}/terraform-docs-${TF_DOCS_VER}-$(uname)-amd64.tar.gz
        tar -zxvf terraform-docs.tar.gz terraform-docs
        chmod +x terraform-docs
        mv terraform-docs ${BIN_PATH}/terraform-docs

    - name: Install TFLint binary
      run: |
        curl -sSLo tflint_linux_amd64.zip https://github.com/terraform-linters/tflint/releases/download/${TFLINT_VER}/tflint_linux_amd64.zip
        unzip tflint_linux_amd64.zip
        chmod +x tflint
        mv tflint ${BIN_PATH}/tflint

    - name: Install Terraform binary
      run: |
        curl -sSLo terraform_${TF_VER}_linux_amd64.zip https://releases.hashicorp.com/terraform/${TF_VER}/terraform_${TF_VER}_linux_amd64.zip
        unzip terraform_${TF_VER}_linux_amd64.zip
        chmod +x terraform
        mv terraform ${BIN_PATH}/terraform

    - name: Enable python
      uses: actions/setup-python@v3

    - name: Install latest pre-commit
      run: pip install --upgrade pre-commit
      
    - name: Check for Workflow Badges in each folder with README
      shell: bash
      run: |
        parent_dir=$(pwd)
        directories=$(find . -not -path '*/.*' -type d -exec test -e '{}'/README.md \; -print)
        files=$(ls .github/workflows | grep "yaml")
        cmd="cat README.md | grep -i 'Build Status' | grep -o "
        for folder in ${directories} ; do
                echo "============================================"
                echo "*******| changing dir to ${folder} |******"
                cd ${parent_dir}
                cd "${folder}"
                for x in ${files}; do
                        echo running command: $cmd"${x}"
                        eval ${cmd}"${x}" > /dev/null 2>&1 || echo $? > /dev/null 2>&1
                        if [[ $_ == "${x}" ]]; then
                                echo "${x}" Badge Exists!!
                        else
                                echo "${x}" Badge NOT FOUND, Adding!
                                sed -i "1i \[!\[Build Status](https://github.com/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}/actions/workflows/"${x}"/badge.svg)](https://github.com/${{ env.REPO_OWNER }}/${{ env.REPO_NAME }}/actions)" README.md
                        fi
                done
        done

    - name: Get current date
      id: date
      run: echo "::set-output name=date::$(date '+%d-%m-%Y %H:%M:%S')"

    - name: Run pre-commit checks
      run: while ! pre-commit run -a ; do pre-commit run -a ; done || exit 0

    - name: Push changes automatically!
      uses: EndBug/add-and-commit@v9
      with:
        message: '[Boldlinksig]: Pre-commit/badge auto updated files on ${{ steps.date.outputs.date }}.'
        author_name: boldlinksig
        author_email: boldlinksig@boldlink.io
        committer_name: boldlinksig
        committer_email: boldlinksig@boldlink.io
